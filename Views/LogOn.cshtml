@using Orchard.ContentManagement
@{
    Style.Require("iCheck");
}
@{
    var userCanRegister = WorkContext.CurrentSite.As<Orchard.Users.Models.RegistrationSettingsPart>().UsersCanRegister;
    var enableLostPassword = WorkContext.CurrentSite.As<Orchard.Users.Models.RegistrationSettingsPart>().EnableLostPassword;
}

<h1 class="page-title">@Html.TitleForPage((string)Model.Title)</h1>

@Html.ValidationSummary(T("Login was unsuccessful. Please correct the errors and try again.").ToString())

@using (Html.BeginFormAntiForgeryPost(Url.Action("LogOn", new { ReturnUrl = Request.QueryString["ReturnUrl"] }))) {
<div class="login-box">
    <div class="login-logo">
        <a href="/"><b>Admin</b>LTE</a>
    </div><!-- /.login-logo -->
    <div class="login-box-body">
        <p class="login-box-msg">@T("Sign in to start your session")</p>
        <div class="form-group has-feedback">
            @Html.TextBox("userNameOrEmail", "", new { id = "username-email", autofocus = "autofocus", @class="form-control", placeholder=T("Email") })
            <span class="fa fa-user form-control-feedback"></span>
            @Html.ValidationMessage("userNameOrEmail")
        </div>
        <div class="form-group has-feedback">
            @Html.TextBox("password", "", new { type="password", @class = "form-control", placeholder = T("Password") })
            <span class="glyphicon glyphicon-lock form-control-feedback"></span>
            @Html.ValidationMessage("password")
        </div>
        <div class="row">
            <div class="col-xs-8">
                <div class="checkbox icheck">
                    <label>
                        @Html.CheckBox("rememberMe", new { id = "remember-me" }) Remember Me
                    </label>
                </div>
            </div><!-- /.col -->
            <div class="col-xs-4">
                <button type="submit" class="btn btn-primary btn-block btn-flat">Sign In</button>
            </div><!-- /.col -->
        </div>

        @if (userCanRegister) { @Html.ActionLink(T("Register").Text, "Register", new { ReturnUrl = Request.QueryString["ReturnUrl"] }) @T(" if you don't have an account.") }<br>
        @if (userCanRegister) { @Html.ActionLink(T("Register").Text, "Register", new { ReturnUrl = Request.QueryString["ReturnUrl"] }) @T(" if you don't have an account.") }

    </div><!-- /.login-box-body -->
</div><!-- /.login-box -->
}
@{
    Script.Require("iCheck");
}
@using (Script.Foot()) {
    @*<script>
      $(function () {
        $('input').iCheck({
          checkboxClass: 'icheckbox_square-blue',
          radioClass: 'iradio_square-blue',
          increaseArea: '20%' // optional
        });
      });
    </script>
        *@
}